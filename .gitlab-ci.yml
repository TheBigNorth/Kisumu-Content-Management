image: ubuntu:16.04

before_script:
  - apt-get update
  - apt-get install -y tzdata zip unzip software-properties-common
  - LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php
  - apt-get -y update
  - apt-get -y upgrade
  - apt-get install -y php7.1 php7.1-cli php7.1-common php7.1-json php7.1-opcache php7.1-mysql php7.1-mbstring php7.1-mcrypt php7.1-zip php7.1-fpm
  - apt-get install -y rsync
  - service php7.1-fpm start
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval $(ssh-agent -s)
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

production_deploy:
  artifacts:
    paths:
      - build/
  only:
    - provisioning
  script:
    - php composer.phar install
    - cp .env.example .env
    - sed -i 's/{{DB_NAME}}/'"$DB_NAME"'/g' .env
    - sed -i 's/{{DB_PASS}}/'"$DB_PASS"'/g' .env
    - sed -i 's/{{DB_HOST}}/'"$DB_HOST"'/g' .env
    - sed -i 's/{{DB_USER}}/'"$DB_USER"'/g' .env
    - sed -i 's/{{IS_SSL_DB}}/'"$IS_SSL_DB"'/g' .env
    - sed -i 's/{{ALLOW_MULTISITE}}/true/g' .env
    - sed -i 's/{{IS_MULTISITE}}/true/g' .env
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
    - ssh -p22 $SERVER_USER@$SERVER_HOST "sudo mkdir -p /var/www/html"
    - ssh -p22 $SERVER_USER@$SERVER_HOST "sudo cp -r /var/www/html /var/www/html_tmp"
    - ssh -p22 $SERVER_USER@$SERVER_HOST "sudo chown -R ubuntu:ubuntu /var/www"
    - rsync -av -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --progress . $SERVER_USER@$SERVER_HOST:/var/www/html_tmp/
    - ssh -p22 $SERVER_USER@$SERVER_HOST "sudo mv /var/www/html /var/www/html_old && sudo mv /var/www/html_tmp /var/www/html"
    - ssh -p22 $SERVER_USER@$SERVER_HOST "sudo rm -rf /var/www/html_old"